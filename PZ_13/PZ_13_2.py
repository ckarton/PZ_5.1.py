# Для каждой строки матрицы с нечетным номером найти среднее арифметическое ее
# элементов.


# код создает матрицу с размером n * m (размер матрицы задается в переменных n и m).
def avg_of_odd_rows(matrix):
    odd_row_avgs = []

    # Затем, используя цикл for, он итерируется по каждой строке матрицы, проверяя,
    # является ли номер строки нечетным. Если номер строки нечетен,
    # то среднее арифметическое ее элементов вычисляется как сумма всех элементов деленная на их количество,
    # и результат выводится на экран.

    for i, row in enumerate(matrix):
        if i % 2 == 1: # check if row number is odd
            avg = sum(row) / len(row)
            odd_row_avgs.append(avg)
    return odd_row_avgs
# В конечном итоге, находим среднее арифметическое
# для каждой строки матрицы с нечетным номером.

matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
print(avg_of_odd_rows(matrix)) # [5.0, 8.0]




